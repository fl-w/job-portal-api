openapi: 3.0.0
info:
  title: Job Portal API
  version: 1.0.0
paths:
  /api/auth/signup:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signup'
      responses:
        201:
          description: User registered successfully
        400:
          description: User with this email already exists

  /api/auth/login:
    post:
      summary: Log in a user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        200:
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        401:
          description: Invalid email or password

  /api/jobs:
    get:
      summary: List all jobs
      tags:
        - Jobs
      responses:
        200:
          description: Successfully retrieved jobs
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                  jobs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
        500:
          description: Internal server error

    post:
      summary: Add a new job (admin only)
      tags:
        - Jobs
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJob'
      responses:
        201:
          description: Job added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        400:
          description: Validation error
        401:
          description: Unauthorized

  /api/jobs/{jobId}:
    get:
      summary: Get details of a specific job
      tags:
        - Jobs
      parameters:
        - in: path
          name: jobId
          required: true
          description: ID of the job to retrieve
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved job details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        404:
          description: Job not found

    delete:
      summary: Delete a job (admin only)
      tags:
        - Jobs
      parameters:
        - in: path
          name: jobId
          required: true
          description: ID of the job to delete
          schema:
            type: string
      responses:
        204:
          description: Job deleted successfully
        401:
          description: Unauthorized
        404:
          description: Job not found

    put:
      summary: Update a specific job (admin only)
      tags:
        - Jobs
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: jobId
          required: true
          description: The ID of the job to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        200:
          description: Successfully updated the job
        401:
          description: Unauthorized
        404:
          description: Job not found

    post:
      summary: Apply for a specific job
      tags:
        - Jobs
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: jobId
          required: true
          schema:
            type: string
          description: The ID of the job to apply for
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        201:
          description: Successfully applied for the job
        400:
          description: Bad Request (e.g., already applied)
        401:
          description: Unauthorized
        404:
          description: Job not found
        409:
          description: Already applied for job

  /user/profile:
    get:
      summary: Get user profile details
      tags:
        - User
      security:
        - BearerAuth: []
      responses:
        200:
          description: Successfully retrieved user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        401:
          description: Unauthorized

  /user/applied-jobs:
    get:
      summary: Get all jobs applied by the user
      tags:
        - User
      security:
        - BearerAuth: []
      responses:
        200:
          description: Successfully retrieved applied jobs
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                  jobs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
        401:
          description: Unauthorized

components:
  schemas:
    Signup:
      type: object
      properties:
        firstName:
          type: string
        email:
          type: string
          format: email
        lastName:
          type: string
        password:
          type: string
          minLength: 6
      required:
        - firstName
        - email
        - lastName
        - password
      additionalProperties: false

    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
      required:
        - email
        - password
      additionalProperties: false

    Job:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        image:
          type: string
        location:
          type: string
        company:
          type: string
        salary:
          $ref: '#/components/schemas/Salary'
        active:
          type: boolean
      required:
        - title
        - description
        - company
      additionalProperties: false

    Salary:
      type: object
      properties:
        currency:
          type: string
          maxLength: 3
          format: uppercase
        min:
          type: number
        max:
          type: number
      required:
        - currency
        - min
        - max
      additionalProperties: false

    CreateJob:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        image:
          type: string
        location:
          type: string
        company:
          type: string
        salary:
          $ref: '#/components/schemas/Salary'
      required:
        - title
        - description
        - company
      additionalProperties: false

    Application:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        coverLetter:
          type: string
      required:
        - firstName
        - lastName
      additionalProperties: false

    UserProfile:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        roles:
          type: array
          items:
            type: string
      required:
        - firstName
        - lastName
        - email
        - roles
      additionalProperties: false
